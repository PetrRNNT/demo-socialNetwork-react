{"version":3,"sources":["Components/Navbar/Navbar.module.css","hoc/withAuthRedirect.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/preloader.svg","Components/common/Preloader/Preloader.module.css","api/api.js","Components/Dialogs/Dialogs.module.css","Components/common/FormsControls/FormsControl.js","serviceWorker.js","Components/Navbar/Navbar.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","redux/dialogs-reducer.js","Components/Dialogs/DialogItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm.js","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/app-reducer.js","Components/FirstBlock/FirstBlock.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","Components/Header/Header.module.css","Components/common/FormsControls/FormsControl.module.css","utils/validators/validators.js","Components/common/Preloader/Preloader.js","redux/profile-reducer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","action","followed","filter","id","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","active","activeClassName","additionalBlock","additionalBlockImg","src","alt","News","Music","Settings","dialogs","messages","message","dialogsReducer","body","newMessageBody","DialogItem","path","dialog","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","required","Dialogs","dialogsPage","dialogsElements","d","key","messagesElements","m","dialogsItems","values","sendMessage","compose","sendMessageCreator","Header","header","logo","textLogo","linkLoggined","buttonLogout","onClick","loginBlock","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","style","formSummaryError","loginButton","length","stopSubmit","_error","loginForm","formData","initialized","appReducer","FirstBlock","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","sidebar","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","UsersContainer","lazy","ProfileContainer","App","initializeApp","render","DialogsContainer","fallback","Preloader","AppContainer","withRouter","promise","Promise","all","MainSocialApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","maxLength","minLength2","preloader","posts","likecounts","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","stateCopy"],"mappings":"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","file":"static/js/main.d9b4fa9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__29u2J\",\"additionalBlock\":\"Navbar_additionalBlock__2v8ki\",\"additionalBlockImg\":\"Navbar_additionalBlockImg__1eFSD\",\"item\":\"Navbar_item__20fWb\",\"active\":\"Navbar_active__1COpg\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.0fc9cd92.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1-INi\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create ({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"26a5c16e-de07-471e-a65b-2cac4540a664\"\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\nreturn instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\nreturn instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\nreturn instance.delete(`auth/login`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1igzD\",\"dialogsItems\":\"Dialogs_dialogsItems__1Bgtl\",\"dialog\":\"Dialogs_dialog__3Qfx3\",\"messages\":\"Dialogs_messages__1INGh\",\"message\":\"Dialogs_message__17EBb\",\"sendMessageButton\":\"Dialogs_sendMessageButton__2puwi\"};","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field name={name}\r\n               placeholder={placeholder}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n        <nav>\r\n\r\n                <div className={`${s.item} ${s.active}`}><NavLink to=\"/profile\"\r\n                                                                  activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Profile\r\n                </NavLink></div>\r\n                <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Messages\r\n                </NavLink></div>\r\n                <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Users\r\n                </NavLink></div>\r\n                <div className={s.item}><NavLink to={\"/news\"} activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    News\r\n                </NavLink></div>\r\n                <div className={s.item}><NavLink to={\"/music\"} activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Music\r\n                </NavLink></div>\r\n                <div className={s.item}><NavLink to={\"/settings\"} activeClassName={s.active}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Settings\r\n                </NavLink></div>\r\n        </nav>\r\n                <div className={s.additionalBlock}>Best Friends\r\n                    <div className={s.additionalBlockImg}><img src=\"https://data.whicdn.com/images/67919136/original.jpg\" alt=\"\"/></div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Petrovich'},\r\n        {id: 2, name: 'Irenich'},\r\n        {id: 3, name: 'Katynich'},\r\n        {id: 4, name: 'Vitunich'},\r\n        {id: 5, name: 'Sosedich'},\r\n        {id: 6, name: 'Gagenich'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your'},\r\n        {id: 3, message: 'Hello world'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Welcome'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder={'Enter your message'}\r\n                       name={\"newMessageBody\"} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default  reduxForm ({form: 'dialog-add-message-form'})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <span>\r\n                        <img\r\n                            src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQZ5d2gWYlsLGv1-yGmbpZo8ds083M86NJotIm_b6nGQES-l2F9&usqp=CAU'></img>\r\n                </span>\r\n                <span className={s.textLogo}>\r\n                Friend Finder\r\n                </span>\r\n            </div>\r\n            <div>\r\n            {props.isAuth\r\n                ?\r\n                <div className={s.linkLoggined}>\r\n                    <label>\r\n                        <a className={s.logout}>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            {props.login} - <div className={s.buttonLogout}\r\n                                                 onClick={props.logout}>LogOut</div>\r\n                        </a>\r\n                    </label>\r\n                </div>\r\n                :\r\n                <div className={s.loginBlock}>\r\n                    <NavLink to={'/login'}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        Login\r\n                    </NavLink>\r\n                </div>\r\n            }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/FormsControls/FormsControl.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            <label><span>remember me</span>{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"})}</label>\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <label>\r\n                <a><button className={style.loginButton}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Login\r\n                </button></a>\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div className={style.loginForm}>\r\n        <h2> Sign In </h2>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport \"./FirstBlock.css\"\r\n\r\nconst FirstBlock = () => {\r\n    return (\r\n        <div className='firstBlock'>\r\n            <h1 className='firstBlockText'>\r\n                <span>F</span>\r\n                <span>r</span>\r\n                <span>i</span>\r\n                <span>e</span>\r\n                <span>n</span>\r\n                <span>d</span>\r\n                <span> </span>\r\n                <span>F</span>\r\n                <span>i</span>\r\n                <span>n</span>\r\n                <span>d</span>\r\n                <span>e</span>\r\n                <span>r</span>\r\n                <p>...best of social</p> <p>...join in</p>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstBlock;","let initialState = {};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport LoginPage from \"./Components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport FirstBlock from \"./Components/FirstBlock/FirstBlock\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst UsersContainer = React.lazy(() => import(\"./Components/Users/UsersContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./Components/Profile/ProfileContainer\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <FirstBlock/>\r\n                <div className='secondBlock'>\r\n                    <HeaderContainer/>\r\n                    <div className='app-wrapper'>\r\n                        <Navbar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Route path='/dialogs'\r\n                                   render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <Suspense fallback={<div><Preloader/></div>}>\r\n                                       <ProfileContainer/>\r\n                                   </Suspense>}/>\r\n\r\n                            <Route path='/users'\r\n                                   render={() => {\r\n                                       return <Suspense fallback={<div><Preloader/></div>}>\r\n                                           <UsersContainer/>\r\n                                       </Suspense>\r\n                                   }}/>\r\n\r\n                            <Route path='/login'\r\n                                   render={() => <LoginPage/>}/>\r\n\r\n                            <Route path='/news' component={News}/>\r\n\r\n                            <Route path='/music' component={Music}/>\r\n\r\n                            <Route path='/settings' component={Settings}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nlet MainSocialApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MainSocialApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainSocialApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <MainSocialApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3PisF\",\"textLogo\":\"Header_textLogo__3xJiB\",\"logo\":\"Header_logo__c6VH_\",\"loginBlock\":\"Header_loginBlock__12i3X\",\"logout\":\"Header_logout__PcMws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2BlqL\",\"error\":\"FormsControl_error__1tlTU\",\"formSummaryError\":\"FormsControl_formSummaryError__30yjG\",\"loginForm\":\"FormsControl_loginForm__3WQvb\",\"loginButton\":\"FormsControl_loginButton__VDo2d\"};","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is requrired';\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const minLength2 = value => {\r\n    if(value.length < 2) return \" Min length is 2 symbols\";\r\n\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={style.preloader}>\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likecounts: 15},\r\n        {id: 2, message: \"It's my first post,\", likecounts: 20},\r\n        {id: 3, message: 'Hello world', likecounts: 12}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likecounts: 0\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n            return stateCopy;\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}